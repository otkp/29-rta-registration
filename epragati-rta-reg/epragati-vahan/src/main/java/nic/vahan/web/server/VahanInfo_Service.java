
package nic.vahan.web.server;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import org.apache.log4j.Logger;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "VahanInfo", targetNamespace = "http://server.web.vahan.nic/", wsdlLocation = "file:/wsdl/VahanInfo.xml")
public class VahanInfo_Service
    extends Service
{

    private static final Logger logger = Logger.getLogger(VahanInfo_Service.class);
    private final static URL VAHANINFO_WSDL_LOCATION;
    private final static WebServiceException VAHANINFO_EXCEPTION;
    private final static QName VAHANINFO_QNAME = new QName("http://server.web.vahan.nic/", "VahanInfo");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
//            url = new URL("file:/wsdl/VahanInfo.xml");
            url = VahanInfo_Service.class.getResource("/wsdl/VahanInfo.xml");
        } catch (Exception e1) {
            e = new WebServiceException(e1);
            logger.error("Failed to create URL for the wsdl Location: 'ExampleBean.wsdl', retrying as a local file");
            logger.error(e1.getMessage());
        }
        VAHANINFO_WSDL_LOCATION = url;
        VAHANINFO_EXCEPTION = e;
    }

    public VahanInfo_Service() {
        super(__getWsdlLocation(), VAHANINFO_QNAME);
    }

    public VahanInfo_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), VAHANINFO_QNAME, features);
    }

    public VahanInfo_Service(URL wsdlLocation) {
        super(wsdlLocation, VAHANINFO_QNAME);
    }

    public VahanInfo_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, VAHANINFO_QNAME, features);
    }

    public VahanInfo_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public VahanInfo_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns VahanInfo
     */
    @WebEndpoint(name = "VahanInfoPort")
    public VahanInfo getVahanInfoPort() {
        return super.getPort(new QName("http://server.web.vahan.nic/", "VahanInfoPort"), VahanInfo.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns VahanInfo
     */
    @WebEndpoint(name = "VahanInfoPort")
    public VahanInfo getVahanInfoPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://server.web.vahan.nic/", "VahanInfoPort"), VahanInfo.class, features);
    }

    private static URL __getWsdlLocation() {
        if (VAHANINFO_EXCEPTION!= null) {
            throw VAHANINFO_EXCEPTION;
        }
        return VAHANINFO_WSDL_LOCATION;
    }

}
