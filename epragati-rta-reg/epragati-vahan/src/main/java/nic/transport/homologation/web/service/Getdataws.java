
package nic.transport.homologation.web.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "getdataws", targetNamespace = "http://service.web.homologation.transport.nic/", /*wsdlLocation = "https://parivahan.gov.in/makerChassisInfo/dataportws?wsdl*/ wsdlLocation = "https://vahan.parivahan.gov.in/makerChassisInfo/dataportws?wsdl")
public class Getdataws
    extends Service
{

    private final static URL GETDATAWS_WSDL_LOCATION;
    private final static WebServiceException GETDATAWS_EXCEPTION;
    private final static QName GETDATAWS_QNAME = new QName("http://service.web.homologation.transport.nic/", "getdataws");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
        	//url change by vahan team on 28-05-2019
            //url = new URL("https://parivahan.gov.in/makerChassisInfo/dataportws?wsdl");
            url = new URL("https://vahan.parivahan.gov.in/makerChassisInfo/dataportws?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        GETDATAWS_WSDL_LOCATION = url;
        GETDATAWS_EXCEPTION = e;
    }

    public Getdataws() {
        super(__getWsdlLocation(), GETDATAWS_QNAME);
    }

    public Getdataws(WebServiceFeature... features) {
        super(__getWsdlLocation(), GETDATAWS_QNAME, features);
    }

    public Getdataws(URL wsdlLocation) {
        super(wsdlLocation, GETDATAWS_QNAME);
    }

    public Getdataws(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, GETDATAWS_QNAME, features);
    }

    public Getdataws(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Getdataws(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns Dataportws
     */
    @WebEndpoint(name = "dataportwsPort")
    public Dataportws getDataportwsPort() {
        return super.getPort(new QName("http://service.web.homologation.transport.nic/", "dataportwsPort"), Dataportws.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Dataportws
     */
    @WebEndpoint(name = "dataportwsPort")
    public Dataportws getDataportwsPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://service.web.homologation.transport.nic/", "dataportwsPort"), Dataportws.class, features);
    }

    private static URL __getWsdlLocation() {
        if (GETDATAWS_EXCEPTION!= null) {
            throw GETDATAWS_EXCEPTION;
        }
        return GETDATAWS_WSDL_LOCATION;
    }

}
